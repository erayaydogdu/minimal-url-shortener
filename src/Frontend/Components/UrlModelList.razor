@using minimal_url_shortener.Shared.Models

<div class="flex flex-col justify-center items-center w-full">
  <section class="container mx-auto">
    <div class="w-full mb-4 overflow-hidden rounded-lg shadow-lg">
      <div class="w-full overflow-x-auto">
        <table class="w-full">
          <thead>
            <tr class="text-md font-semibold tracking-wide text-left bg-secondary">
              <th class="px-4 py-3">Url</th>
              <th class="px-4 py-3"></th>
            </tr>
          </thead>
          <tbody class="bg-white">
            @foreach (var item in Model.Items)
            {
              <tr class="">
                <td class="px-4 py-3 border">
                  <div class="flex items-center text-sm">
                    <div class="">
                      <a class="font-semibold text-black" href="@item.ShortUrl">@item.ShortUrl</a> <br />
                      <a class="text-xs text-muted" href="@item.LongUrl">@item.LongUrl</a>
                    </div>
                  </div>
                </td>

                <td class="px-4 py-3 text-xs border">
                  @* <span class="px-2 py-1 font-semibold leading-tight text-accent bg-green-100 rounded-sm"> Acceptable </span> *@
                  <button class="btn btn-ghost" onclick="copyText('@item.ShortUrl');">
                    <svg fill="#000000" width="24px" height="24px" viewBox="0 0 32 32" data-name="Layer 1" id="Layer_1" xmlns="http://www.w3.org/2000/svg"><title/><path d="M27.2,8.22H23.78V5.42A3.42,3.42,0,0,0,20.36,2H5.42A3.42,3.42,0,0,0,2,5.42V20.36a3.43,3.43,0,0,0,3.42,3.42h2.8V27.2A2.81,2.81,0,0,0,11,30H27.2A2.81,2.81,0,0,0,30,27.2V11A2.81,2.81,0,0,0,27.2,8.22ZM5.42,21.91a1.55,1.55,0,0,1-1.55-1.55V5.42A1.54,1.54,0,0,1,5.42,3.87H20.36a1.55,1.55,0,0,1,1.55,1.55v2.8H11A2.81,2.81,0,0,0,8.22,11V21.91ZM28.13,27.2a.93.93,0,0,1-.93.93H11a.93.93,0,0,1-.93-.93V11a.93.93,0,0,1,.93-.93H27.2a.93.93,0,0,1,.93.93Z"/></svg>
                  </button>
                </td>
              </tr>
            }
          </tbody>
        </table>
      </div>
    </div>
  </section>
  <div class="container mx-auto font-mono">
    <nav>
      <ul class="flex">
        @if (Model.Page > 1)
        {
          <li>
            <a class="mx-1 flex h-9 w-9 items-center justify-center rounded-full border border-blue-gray-100 bg-transparent p-0 text-sm text-blue-gray-500 transition duration-150 ease-in-out hover:bg-light-300"
               hx-get="/history?p=@{Model.Page - 1}"
               hx-target="#urls"
               hx-swap="innerHTML"
               href="#"
               hx-indicator="#ind">
              <span class="material-icons text-sm">keyboard_arrow_left</span>
            </a>
          </li>
        }
        @for (var i = 1; i <= Model.TotalPages; i++)
        {
          <li>
            <a class="mx-1 flex h-9 w-9 items-center justify-center rounded-full p-0 text-sm shadow-md transition duration-150 ease-in-out @(Model.Page == i ? "bg-pink-500 text-white" : "border border-blue-gray-100 bg-transparent text-blue-gray-500 hover:bg-light-300")"
               hx-get="/history?p=@i"
               hx-target="#urls"
               hx-swap="innerHTML"
               href="#"
               hx-indicator="#ind">@i</a>
          </li>
        }
        @if (Model.Page < Model.TotalPages)
        {
          <li>
            <a class="mx-1 flex h-9 w-9 items-center justify-center rounded-full border border-blue-gray-100 bg-transparent p-0 text-sm text-blue-gray-500 transition duration-150 ease-in-out hover:bg-light-300"
               hx-get="/history?p=@(Model.Page + 1)"
               hx-target="#urls"
               hx-swap="innerHTML"
               href="#"
               hx-indicator="#ind">
              <span class="material-icons text-sm">keyboard_arrow_right</span>
            </a>
          </li>
        }
      </ul>
    </nav>
  </div>
</div>


@code
{
    [Parameter]
    public PagedList<UrlModel> Model { get; set; } = new();
}
