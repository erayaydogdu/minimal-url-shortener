@using minimal_url_shortener.Shared.Models

<div class="flex flex-col justify-center items-center w-full">
  <section class="container mx-auto">
    <div class="w-full mb-4 overflow-hidden rounded-lg shadow-lg">
      <div class="w-full overflow-x-auto">
        <table class="w-full">
          <thead>
            <tr class="text-md font-semibold tracking-wide text-left bg-secondary">
              <th class="px-4 py-3">Url</th>
              <th class="px-4 py-3"></th>
            </tr>
          </thead>
          <tbody class="bg-white">
            @foreach (var item in Model.Items)
            {
              <tr class="">
                <td class="px-4 py-3 border">
                  <div class="flex items-center text-sm">
                    <div class="px-4">
                      <span class="material-icons text-success">http</span>
                    </div>
                    <div class="min-w-[12rem] max-w-[20rem] whitespace-normal">
                      <a class="font-semibold text-black" href="@item.ShortUrl">@item.ShortUrl</a> <br/>
                      <a class="text-xs text-muted whitespace-normal" href="@item.LongUrl" target="_blank">@(item.LongUrl.Length > 75 ? item.LongUrl.Substring(0,75) + "..." : item.LongUrl)</a>
                    </div>
                  </div>
                </td>

                <td class="px-4 py-3 text-xs border">
                  <button class="btn btn-ghost" onclick="copyText('@item.ShortUrl');">
                    <span class="material-icons">content_copy</span>
                  </button>
                </td>
              </tr>
            }
          </tbody>
        </table>
      </div>
    </div>
  </section>
  <div class="container mx-auto font-mono">
    <nav>
      <ul class="flex">
        <li>
          <a class="mx-1 flex h-9 w-9 items-center justify-center rounded-full border border-blue-gray-100 bg-transparent p-0 text-sm text-blue-gray-500 transition duration-150 ease-in-out hover:bg-light-300"
             hx-get="/history?p=@(Model.Page > 1 ? Model.Page - 1 : Model.Page)"
             hx-target="#urls"
             hx-swap="innerHTML"
             href="#"
             hx-indicator="#ind">
            <span class="material-icons text-sm">keyboard_arrow_left</span>
          </a>
        </li>
        @for (var i = 1; i <= Model.TotalPages; i++)
        {
          <li>
            <a class="mx-1 flex h-9 w-9 items-center justify-center rounded-full p-0 text-sm shadow-md transition duration-150 ease-in-out @(Model.Page == i ? "bg-pink-500 text-white" : "border border-blue-gray-100 bg-transparent text-blue-gray-500 hover:bg-light-300")"
               hx-get="/history?p=@i"
               hx-target="#urls"
               hx-swap="innerHTML"
               href="#"
               hx-indicator="#ind">@i</a>
          </li>
        }
        @if (Model.Page < Model.TotalPages)
        {
          <li>
            <a class="mx-1 flex h-9 w-9 items-center justify-center rounded-full border border-blue-gray-100 bg-transparent p-0 text-sm text-blue-gray-500 transition duration-150 ease-in-out hover:bg-light-300"
               hx-get="/history?p=@(Model.Page + 1)"
               hx-target="#urls"
               hx-swap="innerHTML"
               href="#"
               hx-indicator="#ind">
              <span class="material-icons text-sm">keyboard_arrow_right</span>
            </a>
          </li>
        }
      </ul>
    </nav>
  </div>
</div>


@code
{
    [Parameter]
    public PagedList<UrlModel> Model { get; set; } = new();
}
